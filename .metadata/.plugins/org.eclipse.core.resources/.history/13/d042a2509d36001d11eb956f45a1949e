package maccess;
import java.util.Iterator;
import java.util.List;
import java.util.Spliterator;
import java.util.Stack;
public class Stack1 
{
	public static void main(String[] args) 
	{
		// creating a generic Stack
		Stack<String> ob = new Stack<String>();
		// adding element to stack
		ob.add("J");
		ob.addElement("M");
		ob.push("N");
		ob.push("K");
		System.out.println(ob);   // [J, M, N, K]
		
		Object s = ob.search("N");
		System.out.println(s);
		
		// using peek() method is used for retriving value from peek of stack
		System.out.println("peek element: "+ob.peek());  // k
		
		// pop() method
		System.out.println("Popped element:"+ob.pop());  // K
		System.out.println(ob);
		
		// capacity() method
		System.out.println("default capacity:"+ob.capacity());  // 10
		
		// elementAt() method
		ob.elementAt(1);
		System.out.println(ob);
		
		// empty() method
		boolean s1 = ob.empty();
		System.out.println(s1);
		
		// elements() method
		Object s2 = ob.elements();
		System.out.println(s2);
		
		// equals() method
		Stack<String> ob1 = new Stack<String>();
		ob1.push("M");
		ob.push("N");
		ob.push("A");
		boolean s3 = ob.equals(ob1);
		System.out.println(s3);
		
		// firstElement() method
		String s11 =ob.firstElement();
		System.out.println(s11);
		
		// lastElement() method
		String s12 = ob.lastElement();
		System.out.println(s12);
		
		// contains() method
		boolean s13 =ob.contains(ob);
		System.out.println(s13);
		
		//get() method
		String s14 = ob.get(0);
		System.out.println(s14);
		
		// getClass() method
		Object s15 = ob.getClass();
		System.out.println(s15);
		
		// indexOf() method
		int s16 = ob.indexOf(ob);   // int or object
		System.out.println(s16);
		
		// indexOf(String element, int index)
		Object s17 = ob.indexOf("M", 0);
		System.out.println(s17);
		
		// insertElement() method
		ob.insertElementAt("Jitendra", 2);
		System.out.println(ob);
		
		// isEmpty() method
		boolean s18 = ob.isEmpty();
		System.out.println(s18);
		
		// Iterator() method
		Iterator<String> s19 = ob.iterator();
		while(s19.hasNext()) {
			System.out.println(s19.next());	
		}
		
		// remove() method
		ob.remove(3);
		System.out.println(ob);
		
		// remove(Object el) method
		ob.remove("N");
		System.out.println(ob);
		
		// removeElement(Object ele) method
		ob.removeElement("N");
		System.out.println(ob);
		
//		ob.removeAllElements();
//		System.out.println();
		
		// search() method
		int s21 = ob.search("M");   // int or Object
		System.out.println(s21);
		
		// set(int index, Object ele) method
		ob.set(1, "MAngo");
		System.out.println(ob);
		
		// setElement(Object el , int index) method
		ob.setElementAt("Pankaj", 1);
		System.out.println(ob);
		
		// subList(int startindex, int lastindex) method
		List<String> s22 = ob.subList(1, 3);
		System.out.println(s22);
		
		// toString() method
		System.out.println(ob.toString());
		
		// Spliterator() method
		Spliterator<String>ob11 = ob.spliterator();
		ob11.forEachRemaining(k->{
			System.out.println(k.toString());
		});
	}
}
