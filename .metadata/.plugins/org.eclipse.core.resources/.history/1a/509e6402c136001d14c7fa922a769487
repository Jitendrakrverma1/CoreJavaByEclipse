package test;

import java.util.Scanner;
import java.util.Spliterator;
import java.util.TreeSet;

@SuppressWarnings("rawtypes")
abstract
 class Product extends Object implements Comparable
{
	public String code, name;
	public float price;
	public int qty;
 public Product(String code, String name, float price, int qty)
 {
	 this.code = code;
	 this.name = name;
	 this.price = price;
	 this.qty = qty;
 }
	 public String toString()
	 {
		 return code+"\t"+name+"\t"+price+"\t"+qty;
	 }
	public int  CompareTo(Object o)
	{
		Product p = (Product) o;
		if(price==p.price) return 0;
		else if(price>p.price) return 1;
		else return -1;
	}
}
public class DemoSet3
{
  public static void main(String[] args)
  {
	  Scanner s = new Scanner(System.in);
	  TreeSet<Product> ob = new TreeSet<Product>();
	  System.out.println("Enter the number of product:");
	  int n = s.nextInt();
	  System.out.println("Enter "+n+" Product Details:");
	  for(int i=1; i<=n ; i++)
	  {
		  System.out.println("=====Details of Product"+i+"=====");
		  System.out.println("Enter the Code: ");
		  String code = s.nextLine();
		  System.out.println("Enter the name: ");
		  String name = s.nextLine();
		  System.out.println("Enter the price: ");
		  float price = Float.parseFloat(s.nextLine());
		  System.out.println("Enter the qty: ");
		  int qty = Integer.parseInt(s.nextLine());
		  ob.add(new Product(code,name,price,qty));
	  }
	  System.out.println("===Diaplay product based on price===");
	  Spliterator<Product> ob1 =ob.spliterator();
	  ob1.forEachRemaining(k->{
		  System.out.println(k.toString());
	  });
	s.close();		  
  }
}
